var geocoder = require('geocoder')

var geoMethods = {};

geoMethods.coorDist = function (lat1, lon1, lat2, lon2) {
  var R = 6371; // Radius of the earth in km
  var dLat = deg2rad(lat2-lat1);  // deg2rad below
  var dLon = deg2rad(lon2-lon1); 
  var a = 
    Math.sin(dLat/2) * Math.sin(dLat/2) +
    Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * 
    Math.sin(dLon/2) * Math.sin(dLon/2)
    ; 
  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); 
  var d = R * c; // Distance in km
  return d/1.60934;
}

geoMethods.getLongitudeLatitude = function(address){
	geocoder.geocode(address, function (err, data){
    var latitude = data.results[0].geometry.location.lat;
    var longitude = data.results[0].geometry.location.lng;
    var coordinates = {"latitude" : latitude, "longitude" : longitude};
    return coordinates;
  });
}

geoMethods.compareDistances = function(trucksArray, searchLocation, range){
  var trucksInRange = [];
  for (var i = 0; i < trucksArray.length; i++) {
    if (trucksArray[i].latitude != null){
      var distance = geoMethods.coorDist(searchLocation.latitude, searchLocation.longitude, 
        parseFloat(trucksArray[i].latitude), parseFloat(trucksArray[i].longitude));
      if (distance <= range) {
        trucksInRange.push(trucksArray[i]);
      }
    }
  }
  return trucksInRange;
}

function deg2rad(deg) {
  return deg * (Math.PI/180);
}

module.exports = geoMethods;